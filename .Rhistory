k = 1:12,
value = sapply(k, function(i) {
p = kmeans(simdatxy, i)
calinhara(simdatxy, p$cluster)
})
)
#Plot the Calinski-Harabasz index
ggplot(CH, aes(x = k, y = value)) + geom_line() + geom_point() +
ylab("CH index")
library("fpc")
#library("cluster")
CH = tibble(
k = 2:12,
value = sapply(k, function(i) {
p = kmeans(simdatxy, i)
calinhara(simdatxy, p$cluster)
})
)
#Plot the Calinski-Harabasz index
ggplot(CH, aes(x = k, y = value)) + geom_line() + geom_point() +
ylab("CH index")
runApp('surfdrive/Shiny-project/PlotTwist')
10
x <- 10
1:x
df_label <- data.frame(1:x, c("cluster_")
)
df_label <- data.frame(1:x, c("cluster_"))
df_label
data.frame(label=c("Cluster "), size=1:number_of_clusters)
data.frame(label=c("Cluster "), size=1:10)
unite(label,size)
data.frame(label=c("Cluster "), size=1:10) %>% unite(label,size)
data.frame(label=c("Cluster "), size=1:10) %>% unite(c(label,size))
data.frame(label=c("Cluster "), size=1:10) %>% unite(c(label,size))
data.frame(label=c("Cluster "), size=1:10)
data.frame(label=c("Cluster "), size=1:10) %>% unite(x,c(label,size))
data.frame(label=c("Cluster "), size=1:10) %>% unite(x,c(label,size), sep="")
data.frame(label=c("Cluster "), size=1:10) %>% unite(label,c(label,size), sep="")
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotsOfDifferences')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('Desktop/Switch-app')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/toggle')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/Two-plots')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/Two-plots')
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
p <- qplot(1,1)
p2 <- xyplot(1~1)
r <- rectGrob(gp=gpar(fill="grey90"))
t <- textGrob("text")
grid.arrange(t, p, p2, r, ncol=2)
?textGrob()
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
p <- qplot(1,1)
p2 <- xyplot(1~1)
r <- rectGrob(gp=gpar(fill="grey90"))
t <- textGrob("text, blah, blah")
grid.arrange(t, p, p2, r, ncol=2)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
p <- qplot(1,1)
p2 <- xyplot(1~1)
r <- rectGrob(gp=gpar(fill="grey90"))
t <- textGrob("text, blah, blah",just = "left")
grid.arrange(t, p, p2, r, ncol=2)
runApp('surfdrive/Shiny-project/Two-plots')
runApp('surfdrive/Shiny-project/Two-plots')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
??theme_bw()
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
ggplot(data = df) +
aes(x=continent) +
aes(y=pop) +
theme_dark(  base_size=15 ) +
theme(panel.grid = element_blank()) +
NULL
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
?theme()
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
runApp('surfdrive/Shiny-project/DataViz-layer-by-layer')
shiny::runApp('surfdrive/Shiny-project/ggPlotteR')
runApp('surfdrive/Shiny-project/ggPlotteR')
install.packages('Rcan')
shiny::runApp('surfdrive/Shiny-project/ggPlotteR')
0.2e-6*1*e-15
0.2e-6*1*1e-15
0.2e-6*1*1e-15*6e23
shiny::runApp('surfdrive/Shiny-project/ggPlotteR')
runApp('surfdrive/Shiny-project/ggPlotteR')
shiny::runApp('surfdrive/Shiny-project/ggPlotteR')
runApp('surfdrive/Shiny-project/ggPlotteR')
runApp('surfdrive/Shiny-project/ggPlotteR')
shiny::runApp('surfdrive/Shiny-project/VolcanoseR')
shiny::runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
install.packages("plotly")
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/Volcanoes/volcanoshiny-master')
runApp('surfdrive/Shiny-project/Volcanoes/volcanoR-master')
runApp('surfdrive/Shiny-project/Volcanoes/VolcanoPlot_shiny_app-master')
runApp('surfdrive/Shiny-project/Tooltip-simple')
source('surfdrive/Shiny-project/Tooltip/app.R')
source('surfdrive/Shiny-project/Tooltip/app.R')
source('surfdrive/Shiny-project/Tooltip/app.R')
source('surfdrive/Shiny-project/Tooltip/app.R')
source('surfdrive/Shiny-project/Tooltip/app.R')
source('surfdrive/Shiny-project/Tooltip/app.R')
source('surfdrive/Shiny-project/Tooltip/app.R')
runApp('surfdrive/Shiny-project/Tooltip-simple')
?read.csv()
shiny::runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('~/surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
shiny::runGitHub('VolcaNoseR', 'JoachimGoedhart')
shiny::runApp('surfdrive/Shiny-project/VolcanoseR')
log(10)
log10(10)
log2(10)
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
-log10(10)
log10(10)
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('Desktop/VolcaNoseR-8a543f5be3ffc94e431bbc076256c36627620d99')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/VolcanoseR')
shiny::runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
shiny::runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('~/surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/ggPlotteR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
?distinct
?distinct()
??distinct
library("dplyr", lib.loc="~/Library/R/3.6/library")
??distinct
?distinct
shiny::runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/Selectize')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
shiny::runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
runApp('surfdrive/Shiny-project/VolcanoseR')
shiny::runApp('surfdrive/Shiny-project/VolcanoseR')
shiny::runApp('Dropbox/graphlinq')
install.packages("dqshiny")
install.packages("rhandsontable")
install.packages("RMariaDB")
install.packages("bcrypt")
install.packages("DBI")
install.packages("DBI")
shiny::runApp('Dropbox/graphlinq')
install.packages("V8")
runApp('Dropbox/graphlinq')
shiny::runApp('surfdrive/Shiny-project/Rhandsontable')
runApp('surfdrive/Shiny-project/Rhandsontable')
runApp('surfdrive/Shiny-project/VolcaNoseR/app2.R')
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
remotes::install_github("whtns/shinyflipbookr")
devtools::install_github("EvaMaeRey/flipbookr")
install.packages("devtools")
devtools::install_github("EvaMaeRey/flipbookr")
install.packages("xaringan")
remotes::install_github("whtns/shinyflipbookr")
shinyflipbookr()
remotes::install_github("whtns/shinyflipbookr")
library("shinyflipbookr", lib.loc="~/Library/R/3.6/library")
shinyflipbookr()
install.packages("gapminder")
shinyflipbookr()
shinyflipbookr()
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/ggPlotteR')
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
newColors <- c("grey", "red", "blue")
newColors[1,3]
newColors(1,3)
newColors[c(1,3)]
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/VolcaNoseR')
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
colourpicker:::colourPickerAddin()
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
install.packages("bitops")
install.packages("bitops")
shiny::runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('Desktop/VolcaNoseR-master')
runApp('Desktop/VolcaNoseR-master')
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('~/surfdrive/Shiny-project/ggPlotteR')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/VolcaNoseR')
x1 <- c(Demi Blum, Anouk Krijger, Tessel Sligting, Esther Liefting )
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
environment()
sessionInfo()
runApp('surfdrive/Shiny-project/VolcaNoseR')
x <- c("1,2")
strsplit(x,",")
as.numeric(strsplit(x,","))
unlist(strsplit(x,","))
runApp('surfdrive/Shiny-project/VolcaNoseR')
install.packages('cowplot')
N<-50
g.progress<- function(i=10,maxi=N){
ggplot(data=data.frame(x="progress",y=i/maxi),
aes(x=x,y=y))+geom_bar(stat="identity",color=NA,fill="#0033a0",alpha=0.82)+
geom_bar(stat="identity", data=data.frame(x="progress",y=1),
color="black",fill=NA)+
theme_void()+scale_y_continuous(limits=c(0,1))+
theme(plot.title=element_text(size=8,hjust=0.1))+
labs(title="Animation progress")+
coord_flip()
}
g.progress(10)
library(ggplot)
g.progress<- function(i=10,maxi=N){
ggplot(data=data.frame(x="progress",y=i/maxi),
aes(x=x,y=y))+geom_bar(stat="identity",color=NA,fill="#0033a0",alpha=0.82)+
geom_bar(stat="identity", data=data.frame(x="progress",y=1),
color="black",fill=NA)+
theme_void()+scale_y_continuous(limits=c(0,1))+
theme(plot.title=element_text(size=8,hjust=0.1))+
labs(title="Animation progress")+
coord_flip()
}
g.progress(10)
library(ggplot2)
g.progress(10)
g.progress(20)
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Movie with a plot
# R-Script for plotting time-series data, retrieved from FIJI and adding it to a movie
# Created by Joachim Goedhart (@joachimgoedhart), first version 2020
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
require(ggplot2)
require(gganimate)
require(tidyr)
require(dplyr)
require(magrittr)
#Read the results file generated by FIJI
df_results <- read.csv("Results.csv")
#Split the column 'Label' into three separate columns, using the colon as delimiter
df_tidy <- df_results %>% separate(Label,c("filename", "Sample","Number"),sep=':')
#Rename column 'Slice' to 'Frame'
df_tidy <- df_tidy %>% rename(Frame = Slice)
#Normalize based on the average baseline intensity (frames 1-5)
df_tidy <- df_tidy %>% group_by(Sample) %>% mutate(`Normalized Intensity`=Mean/mean(Mean[1:5])) %>% ungroup()
#Read the number of frames
nframes <- length(unique(df_tidy$Frame))
# Code for an ordinary plot - uncomment to have to inspect the data
# p <- ggplot(df_tidy, aes(x=Frame, y=`Normalized Intensity`, color=Sample)) + geom_line(size=2) + geom_point(size=3)
# Generate the animation
animated_plot <- ggplot(df_tidy, aes(x=Frame, y=`Normalized Intensity`, color=Sample)) + geom_line(size=2) + geom_point(size=3) + transition_reveal(Frame)
#Do some formatting of the layout
animated_plot <- animated_plot + theme_light(base_size = 16)
animated_plot <- animated_plot + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
animated_plot <- animated_plot + theme(legend.position="none")
animated_plot <- animated_plot + facet_wrap(~Sample, nrow = 3, strip.position = "right") + theme(strip.background =element_rect(fill=NA, color='grey')) + theme(strip.text = element_text(colour = 'black'))
animation <- animate(animated_plot, nframes, renderer = magick_renderer())
#Save the GIF
image_write_gif(animation, 'animation.gif')
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
