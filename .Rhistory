?scale_fill_viridis_c
??scale_fill_viridis_c
require(scales)
Tol_bright <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
Tol_muted <- c('#88CCEE', '#44AA99', '#117733', '#999933', '#DDCC77', '#CC6677', '#882255', '#AA4499', '#332288', '#DDDDDD')
Tol_light <- c('#BBCC33', '#AAAA00', '#77AADD', '#EE8866', '#EEDD88', '#FFAABB', '#99DDFF', '#44BB99', '#DDDDDD')
#From Color Universal Design (CUD): https://jfly.uni-koeln.de/color/
cud <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
show_col(cud)
require(scales)
Tol_bright <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
Tol_muted <- c('#88CCEE', '#44AA99', '#117733', '#999933', '#DDCC77', '#CC6677', '#882255', '#AA4499', '#332288', '#DDDDDD')
Tol_light <- c('#BBCC33', '#AAAA00', '#77AADD', '#EE8866', '#EEDD88', '#FFAABB', '#99DDFF', '#44BB99', '#DDDDDD')
#From Color Universal Design (CUD): https://jfly.uni-koeln.de/color/
cud <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
show_col(c(cud, Tol_light))
require(scales)
Tol_bright <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
Tol_muted <- c('#88CCEE', '#44AA99', '#117733', '#999933', '#DDCC77', '#CC6677', '#882255', '#AA4499', '#332288', '#DDDDDD')
Tol_light <- c('#BBCC33', '#AAAA00', '#77AADD', '#EE8866', '#EEDD88', '#FFAABB', '#99DDFF', '#44BB99', '#DDDDDD')
#From Color Universal Design (CUD): https://jfly.uni-koeln.de/color/
cud <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
show_col(c(Tol_light))
show_col(cud)
show_col(Tol_muted)
show_col(Tol_bright)
show_col(Tol_light)
show_col(cud)
show_col(Tol_muted)
show_col(Tol_bright)
show_col(Tol_light)
show_col(Tol_bright)
show_col(Tol_muted)
show_col(cud)
show_col(Tol_muted)
show_col(Tol_bright)
show_col(Tol_light)
show_col(cud)
show_col(Tol_muted)
if (system.file(package = "inlmisc", lib.loc = .libPaths()) == "")
utils::install.packages("inlmisc", dependencies = TRUE)
install.packages("inlmisc")
pal <- function(col, border = "light gray", ...){
n <- length(col)
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
pal(Tol_bright)
mycols=c(“dodgerblue2”, “#E31A1C”, “green4”, “#6A3D9A”, “#FF7F00”, “black”,
“gold1”, “skyblue2”, “#FB9A99”, “palegreen2”, “#CAB2D6”, “#FDBF6F”,
“gray70”, “khaki2”, “maroon”, “orchid1”, “deeppink1”, “blue1”,
“steelblue4”, “darkturquoise”, “green1”, “yellow4”, “yellow3”,
“darkorange4”, “brown”)
ones <- rep(1, length=length(mycols))
# Get hsv for labels
names(ones) <- apply(round(rgb2hsv(col2rgb(c(mycols))),2), 2,
function(x) {paste(x, collapse=", ")})
pie(ones, col=mycols, cex=.75, main = "HSV values")
mycols=c(“dodgerblue2”, “#E31A1C”, “green4”, “#6A3D9A”, “#FF7F00”, “black”,
“gold1”, “skyblue2”, “#FB9A99”, “palegreen2”, “#CAB2D6”, “#FDBF6F”,
“gray70”, “khaki2”, “maroon”, “orchid1”, “deeppink1”, “blue1”,
“steelblue4”, “darkturquoise”, “green1”, “yellow4”, “yellow3”,
“darkorange4”, “brown”)
mycols=c("dodgerblue2", “#E31A1C”, “green4”, “#6A3D9A”, “#FF7F00”, “black”,
“gold1”, “skyblue2”, “#FB9A99”, “palegreen2”, “#CAB2D6”, “#FDBF6F”)
mycols=c("dodgerblue2", “#E31A1C”, “green4”, “#6A3D9A”, “#FF7F00”, “black”,
"“gold1”, “skyblue2”, “"#FB9A99”, “palegreen2”, “#CAB2D6”, “#FDBF6F”)
ones <- rep(1, length=length(mycols))
mycols=c("dodgerblue2", “#E31A1C”, “green4”, “#6A3D9A”, “#FF7F00”, “black”, "gold1”, “skyblue2”, “"#FB9A99”, “palegreen2”, “#CAB2D6”, “#FDBF6F”)
mycols=c("dodgerblue2", "#E31A1C", "green4", "#6A3D9A", "#FF7F00", "black", "gold1", "skyblue2", "#FB9A99", "palegreen2", "#CAB2D6", "#FDBF6F")
ones <- rep(1, length=length(mycols))
names(ones) <- apply(round(rgb2hsv(col2rgb(c(mycols))),2), 2,
function(x) {paste(x, collapse=", ")})
pie(ones, col=mycols, cex=.75, main = "HSV values")
pie(names(mycols), col=mycols, cex=.75, main = "HSV values")
pie(mycols, col=mycols, cex=.75, main = "HSV values")
pie(mycols, col=mycols)
pie(mycols, col=mycols)
pie(names(mycols), col=mycols)
pie(ones, col=mycols, cex=.75)
names(ones)=mycols
pie(ones, col=mycols, cex=.75)
ones <- rep(1, length=length(cud))
# Get hsv for labels
names(ones)=mycols
pie(ones, col=mycols, cex=.75)
ones <- rep(1, length=length(cud))
# Get hsv for labels
names(ones)=cud
pie(ones, col=mycols, cex=.75)
ones <- rep(1, length=length(cud))
# Get hsv for labels
names(ones)=cud
pie(ones, col=mycols, cex=.75, main="CUD")
pie(ones, col=mycols, cex=3, main="CUD")
pie(ones, col=mycols, cex=1, main="CUD")
pie(ones, col=mycols, cex=1, main="CUD")
par(mfrow=c(1,2))
ones <- rep(1, length=length(cud))
names(ones)=cud
twos <- rep(1, length=length(Tol_bright))
names(twos)=Tol_bright
pie(ones, col=cud, cex=1, main="CUD")
pie(twos, col=Tol_bright, cex=1, main="CUD")
par(mfrow=c(1,2))
ones <- rep(1, length=length(cud))
names(ones)=cud
twos <- rep(1, length=length(Tol_bright))
names(twos)=Tol_bright
pie(ones, col=cud, cex=.5, main="CUD")
pie(twos, col=Tol_bright, cex=.5, main="Tol_bright")
par(mfrow=c(1,2))
ones <- rep(1, length=length(cud))
names(ones)=cud
twos <- rep(1, length=length(Tol_bright))
names(twos)=Tol_bright
pie(ones, col=cud, cex=1, main="CUD")
pie(twos, col=Tol_bright, cex=1, main="Tol_bright")
palpie <- function(col)
{
par(mar=c(1,1,1,1))
ones <- rep(1, length=length(col))
names(ones) <- col
pie(ones, col=col, cex=.75, main = "Palette")
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
palpie(Tol_bright)
palpie(Tol_muted)
palpie(cud)
par(mfrow=c(2,2))
palpie(Tol_light)
palpie(Tol_bright)
palpie(cud)
palpie(Tol_muted)
deparse(substitute(Tol_bright))
palpie <- function(col)
{
par(mar=c(1,1,1,1))
ones <- rep(1, length=length(col))
names(ones) <- col
title <- deparse(substitute(col))
pie(ones, col=col, cex=.75, main = title)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
palpie(Tol_muted)
par(mfrow=c(2,2))
palpie(Tol_muted)
palpie(Tol_bright)
palpie(Tol_light)
palpie(cud)
show_col(Tol_muted)
show_col(Tol_light)
show_col(Tol_bright)
show_col(Tol_muted)
show_col(cud)
par(mfrow=c(2,2))
show_col(Tol_light)
show_col(Tol_bright)
show_col(Tol_muted)
show_col(cud)
pal(Tol_bright)
par(mfrow=c(2,2))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Cud)
Cud <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Cud)
par(mfrow=c(2,2))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
pal <- function(col, border = "light gray", ...){
n <- length(col)
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = col, ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
pal(Cud)
pal <- function(col, border = "light gray", ...){
n <- length(col)
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
# Function for plotting colors as pie
palpie <- function(col)
{
par(mar=c(1,1,1,1))
ones <- rep(1, length=length(col))
names(ones) <- col
title <- deparse(substitute(col))
pie(ones, col=col, cex=.75, main = title)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
par(mfrow=c(2,2))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
palpie <- function(col)
{
par(mar=c(1,1,1,1))
ones <- rep(1, length=length(col))
names(ones) <- col
title <- deparse(substitute(col))
pie(ones, col=col, cex=1, main = title)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
par(mfrow=c(2,2))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
par(mfrow=c(4,1))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
par(mfrow=c(1,4))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Cud)
cb_palette <- c("#999999", "#E69F00", "#56B4E9", "#009E73","#F0E442", "#0072B2", "#D55E00", "#CC79A7")
palpie <- function(col)
{
par(mar=c(1,1,1,1))
ones <- rep(1, length=length(col))
names(ones) <- col
title <- deparse(substitute(col))
pie(ones, col=col, cex=1, main = title)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
paslpie(cb_palette)
palpie(cb_palette)
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
# Taken mostly from https://tradeblotter.wordpress.com/2013/02/28/the-paul-tol-21-color-salute/
# Function for plotting colors side-by-side
pal <- function(col, border = "light gray", ...){
n <- length(col)
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
# Function for plotting colors as pie
palpie <- function(col)
{
par(mar=c(1,1,1,1))
ones <- rep(1, length=length(col))
names(ones) <- col
title <- deparse(substitute(col))
pie(ones, col=col, cex=1, main = title)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
########## DEFINE Color palettes #########
#From Paul Tol: https://personal.sron.nl/~pault/
Tol_bright <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
Tol_muted <- c('#88CCEE', '#44AA99', '#117733', '#999933', '#DDCC77', '#CC6677', '#882255', '#AA4499', '#332288', '#DDDDDD')
Tol_light <- c('#BBCC33', '#AAAA00', '#77AADD', '#EE8866', '#EEDD88', '#FFAABB', '#99DDFF', '#44BB99', '#DDDDDD')
#From Color Universal Design (CUD): https://jfly.uni-koeln.de/color/
Okabe_Ito <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
########################## SHOW as multiple strips ###################
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Okabe_Ito)
########################## SHOW as multiple PIE Charts ###################
par(mfrow=c(1,4))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Okabe_Ito)
#From Paul Tol: https://personal.sron.nl/~pault/
Tol_bright <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
Tol_muted <- c('#88CCEE', '#44AA99', '#117733', '#332288', '#999933', '#DDCC77', '#CC6677', '#882255', '#AA4499', '#DDDDDD')
Tol_light <- c('#BBCC33', '#AAAA00', '#77AADD', '#EE8866', '#EEDD88', '#FFAABB', '#99DDFF', '#44BB99', '#DDDDDD')
#From Color Universal Design (CUD): https://jfly.uni-koeln.de/color/
Okabe_Ito <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
par(mfrow=c(1,4))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Okabe_Ito)
#From Paul Tol: https://personal.sron.nl/~pault/
Tol_bright <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
Tol_muted <- c('#88CCEE', '#44AA99', '#117733', '#332288', '#DDCC77', '#999933','#CC6677', '#882255', '#AA4499', '#DDDDDD')
Tol_light <- c('#BBCC33', '#AAAA00', '#77AADD', '#EE8866', '#EEDD88', '#FFAABB', '#99DDFF', '#44BB99', '#DDDDDD')
#From Color Universal Design (CUD): https://jfly.uni-koeln.de/color/
Okabe_Ito <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
par(mfrow=c(1,4))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Okabe_Ito)
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Okabe_Ito)
# Taken mostly from https://tradeblotter.wordpress.com/2013/02/28/the-paul-tol-21-color-salute/
# Function for plotting colors side-by-side
pal <- function(col, border = "light gray", ...){
n <- length(col)
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
# Function for plotting colors as pie
palpie <- function(col)
{
par(mar=c(1,1,1,1))
ones <- rep(1, length=length(col))
names(ones) <- col
title <- deparse(substitute(col))
pie(ones, col=col, cex=1, main = title)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
########## DEFINE Color palettes #########
#From Paul Tol: https://personal.sron.nl/~pault/
Tol_bright <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
Tol_muted <- c('#88CCEE', '#44AA99', '#117733', '#332288', '#DDCC77', '#999933','#CC6677', '#882255', '#AA4499', '#DDDDDD')
Tol_light <- c('#BBCC33', '#AAAA00', '#77AADD', '#EE8866', '#EEDD88', '#FFAABB', '#99DDFF', '#44BB99', '#DDDDDD')
#From Color Universal Design (CUD): https://jfly.uni-koeln.de/color/
Okabe_Ito <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
########################## SHOW as multiple strips ###################
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Okabe_Ito)
########################## SHOW as multiple PIE Charts ###################
par(mfrow=c(2,2))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Okabe_Ito)
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Okabe_Ito)
# Function for plotting colors side-by-side
pal <- function(col, border = "light gray", ...){
n <- length(col)
title <- deparse(substitute(col))
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = title, ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Okabe_Ito)
# Taken mostly from https://tradeblotter.wordpress.com/2013/02/28/the-paul-tol-21-color-salute/
# Function for plotting colors side-by-side
pal <- function(col, border = "light gray", ...){
n <- length(col)
title <- deparse(substitute(col))
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, title=title,xlab = title, ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Okabe_Ito)
# Taken mostly from https://tradeblotter.wordpress.com/2013/02/28/the-paul-tol-21-color-salute/
# Function for plotting colors side-by-side
pal <- function(col, border = "light gray", ...){
n <- length(col)
title <- deparse(substitute(col))
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, main=title,xlab = title, ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Okabe_Ito)
# Function for plotting colors side-by-side
pal <- function(col, border = "light gray", ...){
n <- length(col)
title <- deparse(substitute(col))
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, main=title,xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Okabe_Ito)
# Taken mostly from https://tradeblotter.wordpress.com/2013/02/28/the-paul-tol-21-color-salute/
# Function for plotting colors side-by-side
pal <- function(col, border = "light gray", ...){
n <- length(col)
title <- deparse(substitute(col))
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, main=title,xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Okabe_Ito)
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Okabe_Ito)
pal <- function(col, border = "light gray", ...){
n <- length(col)
title <- deparse(substitute(col))
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, main=title, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
pal <- function(col, border = "light gray", ...){
n <- length(col)
title <- deparse(substitute(col))
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, main=title,xlab = title, ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
pal <- function(col, border = "light gray", ...){
n <- length(col)
title <- deparse(substitute(col))
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, main=title,xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
########################## SHOW as multiple strips ###################
par(mfrow=c(2,2))
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
pal(Okabe_Ito)
par(mfrow=c(2,2))
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
palpie(Okabe_Ito)
runApp('surfdrive/Shiny-project/PlotTwist')
palpie(Okabe_Ito)
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
# Taken mostly from https://tradeblotter.wordpress.com/2013/02/28/the-paul-tol-21-color-salute/
# Function for plotting colors side-by-side
pal <- function(col, border = "light gray", ...){
n <- length(col)
title <- deparse(substitute(col))
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, main=title,xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
# Function for plotting colors as pie
palpie <- function(col)
{
par(mar=c(1,1,1,1))
ones <- rep(1, length=length(col))
names(ones) <- col
title <- deparse(substitute(col))
pie(ones, col=col, cex=1, main = title)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
########## DEFINE Color palettes #########
#From Paul Tol: https://personal.sron.nl/~pault/
Tol_bright <- c('#EE6677', '#228833', '#4477AA', '#CCBB44', '#66CCEE', '#AA3377', '#BBBBBB')
Tol_muted <- c('#88CCEE', '#44AA99', '#117733', '#332288', '#DDCC77', '#999933','#CC6677', '#882255', '#AA4499', '#DDDDDD')
Tol_light <- c('#BBCC33', '#AAAA00', '#77AADD', '#EE8866', '#EEDD88', '#FFAABB', '#99DDFF', '#44BB99', '#DDDDDD')
#From Color Universal Design (CUD): https://jfly.uni-koeln.de/color/
Okabe_Ito <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
########################## SHOW as multiple strips ###################
par(mfrow=c(2,2))
pal(Okabe_Ito)
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
########################## SHOW as multiple PIE Charts ###################
par(mfrow=c(2,2))
palpie(Okabe_Ito)
palpie(Tol_bright)
palpie(Tol_muted)
palpie(Tol_light)
par(mfrow=c(2,2))
pal(Okabe_Ito)
pal(Tol_bright)
pal(Tol_muted)
pal(Tol_light)
runApp('surfdrive/Shiny-project/PlotTwist')
