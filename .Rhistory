p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=1.02*upper_y, ymax=1.03*upper_y, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,10,18))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
coord_cartesian(
#    ylim=c(10,14), # This focuses the x-axis on the range of interest
clip = 'off',
NULL
) +
theme(plot.margin = unit(c(2,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=1.02*upper_y, ymax=1.03*upper_y, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,10,17))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
coord_cartesian(
#    ylim=c(10,14), # This focuses the x-axis on the range of interest
clip = 'off',
NULL
) +
theme(plot.margin = unit(c(2,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=1.02*upper_y, ymax=1.03*upper_y, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,17))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
coord_cartesian(
#    ylim=c(10,14), # This focuses the x-axis on the range of interest
clip = 'off',
NULL
) +
theme(plot.margin = unit(c(2,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=1.02*upper_y, ymax=1.03*upper_y, alpha=0.8, fill="black")
#plot
p
ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
rng <- upper_y-lower_y
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,17))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
coord_cartesian(
#    ylim=c(10,14), # This focuses the x-axis on the range of interest
clip = 'off',
NULL
) +
theme(plot.margin = unit(c(2,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
rng <- upper_y-lower_y
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.02*rng, ymax=upper_y+.03*rng, alpha=0.8, fill="black")
#plot
p
upper_y+.02*rng
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,17))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
coord_cartesian(
#    ylim=c(10,14), # This focuses the x-axis on the range of interest
clip = 'off',
NULL
) +
theme(plot.margin = unit(c(2,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
rng <- upper_y-lower_y
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.02*rng, ymax=upper_y+.05*rng, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,17))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
coord_cartesian(
#    ylim=c(10,14), # This focuses the x-axis on the range of interest
clip = 'off',
NULL
) +
theme(plot.margin = unit(c(3,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
rng <- upper_y-lower_y
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.02*rng, ymax=upper_y+.06*rng, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,17))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
coord_cartesian(
#    ylim=c(10,14), # This focuses the x-axis on the range of interest
clip = 'off',
NULL
) +
theme(plot.margin = unit(c(3,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
rng <- upper_y-lower_y
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.02*rng, ymax=upper_y+.1*rng, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,17))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
coord_cartesian(
#    ylim=c(10,14), # This focuses the x-axis on the range of interest
clip = 'off',
NULL
) +
theme(plot.margin = unit(c(3,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
rng <- upper_y-lower_y
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+..08*rng, ymax=upper_y+.1*rng, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,17))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
coord_cartesian(
#    ylim=c(10,14), # This focuses the x-axis on the range of interest
clip = 'off',
NULL
) +
theme(plot.margin = unit(c(3,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
rng <- upper_y-lower_y
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.08*rng, ymax=upper_y+.1*rng, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,17))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
coord_cartesian(
#    ylim=c(10,14), # This focuses the x-axis on the range of interest
clip = 'off',
NULL
) +
theme(plot.margin = unit(c(3,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
rng <- upper_y-lower_y
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*rng, ymax=upper_y+.1*rng, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,10,17))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
coord_cartesian(
#    ylim=c(10,14), # This focuses the x-axis on the range of interest
clip = 'off',
NULL
) +
theme(plot.margin = unit(c(3,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
rng <- upper_y-lower_y
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*rng, ymax=upper_y+.1*rng, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,17))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
coord_cartesian(
#    ylim=c(10,14), # This focuses the x-axis on the range of interest
clip = 'off',
NULL
) +
theme(plot.margin = unit(c(3,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
rng <- upper_y-lower_y
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*rng, ymax=upper_y+.1*rng, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
coord_cartesian(
#    ylim=c(10,14), # This focuses the x-axis on the range of interest
clip = 'off',
NULL
) +
theme(plot.margin = unit(c(3,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
rng <- upper_y-lower_y
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*rng, ymax=upper_y+.1*rng, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +
geom_point()+
theme(plot.margin = unit(c(3,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
rng <- upper_y-lower_y
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*rng, ymax=upper_y+.1*rng, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +geom_point()
p <- p+  theme(plot.margin = unit(c(3,1,1,1), "lines")) # This widens the right margin
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
rng <- upper_y-lower_y
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*rng, ymax=upper_y+.1*rng, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +geom_point()
# Get current max and min values for y-axis and the range
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
range_y <- upper_y-lower_y
#Set the limits to current values and prevent clipping and increase top margin
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')+  theme(plot.margin = unit(c(3,1,1,1), "lines"))
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*range_y, ymax=upper_y+.1*range_y, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +geom_point()
p <- p+  theme(plot.margin = unit(c(3,1,1,1), "lines")) # This widens the top margin
# Get current max and min values for y-axis and the range
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
range_y <- upper_y-lower_y
#Set the limits to current values and prevent clipping
p <- p  + coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*range_y, ymax=upper_y+.1*range_y, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +geom_point()
p <- p+  theme(plot.margin = unit(c(3,1,1,1), "lines")) # This widens the top margin
# Get current max and min values for y-axis and the range
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
range_y <- upper_y-lower_y
#Set the limits to current values and prevent clipping
p <- p  +  theme(plot.margin = unit(c(3,1,1,1), "lines"))+ coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*range_y, ymax=upper_y+.1*range_y, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +geom_point()
#p <- p+  theme(plot.margin = unit(c(3,1,1,1), "lines")) # This widens the top margin
# Get current max and min values for y-axis and the range
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
range_y <- upper_y-lower_y
#Set the limits to current values and prevent clipping
p <- p  +  theme(plot.margin = unit(c(3,1,1,1), "lines"))+ coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*range_y, ymax=upper_y+.1*range_y, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +geom_point()
# Get current max and min values for y-axis and the range
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
range_y <- upper_y-lower_y
#Increase upper margin, set the limits of y-axis to current values and prevent clipping
p <- p  +  theme(plot.margin = unit(c(3,1,1,1), "lines"))+ coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
#Add rectangle to top of plot
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*range_y, ymax=upper_y+.1*range_y, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +geom_point()
# Get current max and min values for y-axis and the range
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
range_y <- upper_y-lower_y
#Increase upper margin, set the limits of y-axis to current values and prevent clipping
p <- p  +  theme(plot.margin = unit(c(4,1,1,1), "lines"))+ coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
#Add rectangle to top of plot
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*range_y, ymax=upper_y+.1*range_y, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +geom_point()
# Get current max and min values for y-axis and the range
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
range_y <- upper_y-lower_y
#Increase upper margin, set the limits of y-axis to current values and prevent clipping
p <- p  +  theme(plot.margin = unit(c(2,1,1,1), "lines"))+ coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
#Add rectangle to top of plot
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*range_y, ymax=upper_y+.1*range_y, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +geom_point()
# Get current max and min values for y-axis and the range
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
range_y <- upper_y-lower_y
#Increase upper margin, set the limits of y-axis to current values and prevent clipping
p <- p  +  theme(plot.margin = unit(c(2,1,1,1), "lines"))+ coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
#Add rectangle to top of plot
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*range_y, ymax=upper_y+.1*range_y, alpha=0.5, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +geom_point()
# Get current max and min values for y-axis and the range
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
range_y <- upper_y-lower_y
#Increase upper margin, set the limits of y-axis to current values and prevent clipping
p <- p  +  theme(plot.margin = unit(c(2,1,1,1), "lines"))+ coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
#Add rectangle to top of plot
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*range_y, ymax=upper_y+.1*range_y, alpha=0.8, fill="black")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +geom_point()
# Get current max and min values for y-axis and the range
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
range_y <- upper_y-lower_y
#Increase upper margin, set the limits of y-axis to current values and prevent clipping
p <- p  +  theme(plot.margin = unit(c(2,1,1,1), "lines"))+ coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
#Add rectangle to top of plot
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*range_y, ymax=upper_y+.1*range_y, alpha=0.8, fill="blue")
#plot
p
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +geom_point()
# Get current max and min values for y-axis and the range
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
range_y <- upper_y-lower_y
#Increase upper margin, set the limits of y-axis to current values and prevent clipping
p <- p  +  theme(plot.margin = unit(c(2,1,1,1), "lines"))+ coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
#Add rectangle to top of plot
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*range_y, ymax=upper_y+.1*range_y, alpha=0.8, fill="black")
#plot
p
?annotation_custom
df <- data.frame(x = 1:10, y = 1:10)
base <- ggplot(df, aes(x, y)) +
geom_blank() +
theme_bw()
base + annotation_custom(
grob = grid::roundrectGrob(),
xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf
)
df2 <- data.frame(x = 1 , y = 1)
g <- ggplotGrob(ggplot(df2, aes(x, y)) +
geom_point() +
theme(plot.background = element_rect(colour = "black")))
base +
annotation_custom(grob = g, xmin = 1, xmax = 10, ymin = 8, ymax = 10)
df <- data.frame(x = 1:10, y = 1:10)
base <- ggplot(df, aes(x, y)) +
geom_blank() +
theme_bw()
base
base + annotation_custom(
grob = grid::roundrectGrob(),
xmin = 5, xmax = 6, ymin = -5, ymax = 6
)
# Dummy plot
df <- data.frame(x = 1:10, y = 1:10)
base <- ggplot(df, aes(x, y)) +
geom_blank() +
theme_bw()
# Full panel annotation
base + annotation_custom(
grob = grid::roundrectGrob(),
xmin = 5, xmax = 6, ymin = -5, ymax = 6
)+ coord_cartesian(clip = 'off')
?annotation_custom
# Dummy plot
df <- data.frame(x = 1:10, y = 1:10)
base <- ggplot(df, aes(x, y)) +
geom_blank() +
theme_bw()
# Full panel annotation
base + annotation_custom(
grob = rect(),
xmin = 5, xmax = 6, ymin = -5, ymax = 6
)+ coord_cartesian(clip = 'off')
?rect()
# Generate data
df <- data.frame(x=c(1.5,2,2.5),
y=c(12,2,100))
# Generate Plot
p <-  ggplot(df,aes(x=x,y=y)) +geom_point()
# Get current max and min values for y-axis and the range
upper_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]
lower_y <- ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[1]
range_y <- upper_y-lower_y
#Increase upper margin, set the limits of y-axis to current values and prevent clipping
p <- p  +  theme(plot.margin = unit(c(2,1,1,1), "lines"))+ coord_cartesian(ylim=c(lower_y,upper_y),clip = 'off')
#Add rectangle to top of plot
p <- p + annotate("rect", xmin=1, xmax=2, ymin=upper_y+.07*range_y, ymax=upper_y+.1*range_y, alpha=0.8, fill="black")
#plot
p
shiny::runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
?axis.line.x
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/PlotTwist')
?ggtitle()
runApp('surfdrive/Shiny-project/PlotTwist')
